trigger:
  branches:
    include:
      - development
      - master
  paths:
    exclude:
      - "pipelines/*.yml"
      - docs/README.md
      - "config/*"
      - "license/*"
      - "*.azcli"


parameters:
  - name: azureServicePrincipal
    displayName: Azure Service Principal
    type: string
    default:  pan-firewall-dev-lab

variables:
- group: firewall-vars-1

stages:
- stage: prerequisites
  jobs:
    - job: createResourceGroup
      steps:
        - task: AzureCLI@2
          inputs:
            connectedServiceNameARM: ${{ parameters.azureServicePrincipal }}
            scriptType:  bash
            scriptLocation: inlineScript
            inlineScript:  az group create -l $(location) -n $(subnetPrefix)-$(environment)-rg
            failOnStandardError:  true
    - job: acceptTerms
      dependsOn: createResourceGroup
      steps:
      - task: AzureCLI@2
        inputs:
          connectedServiceNameARM: ${{ parameters.azureServicePrincipal }}
          scriptType:  bash
          scriptLocation: inlineScript
          inlineScript:  az vm image terms accept --urn paloaltonetworks:vmseries-flex:byol:10.1.6
          failOnStandardError: true

#- stage: validate
#  jobs:
#    - job: testResourceGroup
#      steps:
#        - task: AzureCLI@2
#          inputs:
#            connectedServiceNameARM: ${{ parameters.azureServicePrincipal }}
#            scriptType:  bash
#            scriptLocation: inlineScript
#            inlineScript: az group exists -n sfc-network-dev-rg- # test failure
#            failOnStandardError:  true

- stage: createFirewall
  jobs:
    - job: deployTemplate
      steps:
        - task: AzureResourceManagerTemplateDeployment@3
          inputs:
            deploymentScope: 'Resource Group'
            azureResourceManagerConnection: ${{ parameters.azureServicePrincipal }}
            action: 'Create Or Update Resource Group'
            resourceGroupName: sfc-$(subnetPrefix)-$(environment)-rg
            location: $(location)
            templateLocation: 'Linked artifact'
            csmFile: firewall.json
            csmParametersFile: firewall.parameters.json
            overrideParameters: #-adminPassword $(adminPassword) -bootstrapAccessKey $(bootstrapAccessKey)
            deploymentMode: 'Incremental'