{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": ""
        },
        "environment": {
            "type": "string",
            "defaultValue": "",
            "allowedValues": [
                "prod",
                "dev",
                "sandbox"
            ]
        },
        "subnetPrefix": {
            "type": "string",
            "defaultValue": ""
        },
        /* "pipCount": {
            "type": "int",
            "minValue": 3,
            "defaultValue": 3
        }, */
        "paCount": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1
        }
    },
    "functions": [],
    "variables": {
        "tags": {
            "Department": "it",
            "Team": "networking",
            "Environment": "[parameters('environment')]",
            "Application": "[parameters('subnetPrefix')]"
        },
        "vnet1Name": "[concat(parameters('subnetPrefix'),'-',parameters('environment'),'-vnet')]",
        "mgmtPrefix": "[concat('firewall-management-',parameters('environment'))]",
        "untrustPrefix": "[concat('firewall-untrusted-',parameters('environment'))]",
        "trustPrefix": "[concat('firewall-trusted-',parameters('environment'))]"
    },
    "resources": [
        {
            // create the vnet
            "name": "[variables('vnet1Name')]",
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2020-11-01",
            "dependsOn": [ "[resourceId('Microsoft.Network/networkSecurityGroups', concat(variables('mgmtPrefix'),'-nsg'))]" ],
            "location": "[parameters('location')]",
            "tags": "[variables('tags')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "10.16.0.0/16"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('mgmtPrefix')]",
                        "properties": {
                            "addressPrefix": "10.16.90.0/24",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups',concat(variables('mgmtPrefix'),'-nsg'))]"
                            }
                        }
                    },
                    {
                        "name": "[variables('untrustPrefix')]",
                        "properties": {
                            "addressPrefix": "10.16.91.0/24" /* ,
                        "networkSecurityGroup": "" */
                        }
                    },
                    {
                        "name": "[variables('trustPrefix')]",
                        "properties": {
                            "addressPrefix": "10.16.92.0/24" /* ,
                        "networkSecurityGroup": "" */
                        }
                    }
                ]
            }
        },
        {
            //  management NSG
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            //"name": "firewall-management-sandbox-nsg",
            "name": "[concat(variables('mgmtPrefix'),'-nsg')]",
            "location": "westus3",
            "properties": {
                "securityRules": [
                    {
                        "name": "AllowGlobalProtect",
                        "properties": {
                            "protocol": "TCP",
                            "sourcePortRange": "*",
                            "sourceAddressPrefix": "10.10.24.0/24",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1200,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [
                                "22",
                                "443"
                            ],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "AllowManagementInbound",
                        "properties": {
                            "description": "AllowManagementInbound",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 1300,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [
                                "22",
                                "443"
                            ],
                            "sourceAddressPrefixes": [
                                "63.156.58.20/32",
                                "4.1.98.242/32",
                                "72.208.101.143/32"
                            ],
                            "destinationAddressPrefixes": []
                        }
                    },
                    {
                        "name": "DenyAllInBound",
                        "properties": {
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Deny",
                            "priority": 1400,
                            "direction": "Inbound",
                            "sourcePortRanges": [],
                            "destinationPortRanges": [],
                            "sourceAddressPrefixes": [],
                            "destinationAddressPrefixes": []
                        }
                    }
                ]
            }
        },
        {
            // untrust NSG
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "[concat(variables('untrustPrefix'),'-nsg')]",
            "location": "westus3",
            "properties": {
                "securityRules": []
            }
        },
        {
            // trust NSG
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-11-01",
            "name": "[concat(variables('trustPrefix'),'-nsg')]",
            "location": "westus3",
            "properties": {
                "securityRules": []
            }
        }/* ,
        {
            // Public IP addresses
            "name": "[concat(parameters('subnetPrefix'),'-',parameters('environment'),copyIndex(1),'-pip')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "apiVersion": "2020-11-01",
            "location": "[parameters('location')]",
            "tags": "[variables('tags')]",
            "properties": {
                "publicIPAllocationMethod": "Dynamic"
            },
            "copy": {
                "name": "PIPcopy",
                "count": "[parameters('pipCount')]"
            }
        },
        {
            // create the Network interfaces
            "name": "[concat(variables('mgmtPrefix'),'-',copyIndex(1),'-nic')]",
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2020-11-01",
            "location": "[parameters('location')]",
            "tags": "[variables('tags')]",
            "dependsOn": [
                "[resourceId('Microsoft.Network/virtualNetworks', variables('vnet1Name'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipConfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[resourceId('Microsoft.Network/virtualNetworks/subnets', variables('vnet1Name'), variables('mgmtPrefix'))]"
                            },
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',concat(parameters('subnetPrefix'),'-',parameters('environment'),copyIndex(1),'-pip'))]"
                            }
                        }
                    }
                ]
            },
            "copy": {
                "name": "UntrustNICCopy",
                "count": "[parameters('paCount')]"
            }
        } */
    ],
    "outputs": {}
}